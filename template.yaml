AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  fleet-management

  Fleet-management
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  getCar:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: fleet-management/built/getCar
      Policies:
        # Give DynamoDB Full Access to your Lambda Function, this should be changed!
        - AmazonDynamoDBFullAccess
      Handler: app.lambdaHandler
      Layers:
        - !Ref FleetManagementLayer
      Runtime: nodejs12.x
      Events:
        FleetManagementApi:
          Type: Api
          Properties:
            Path: /getCar
            Method: get
  getAll:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: fleet-management/built/getAll
      Policies:
        # Give DynamoDB Full Access to your Lambda Function, this should be changed!
        - AmazonDynamoDBFullAccess
      Handler: app.lambdaHandler
      Layers:
        - !Ref FleetManagementLayer
      Runtime: nodejs12.x
      Events:
        FleetManagementApi:
          Type: Api
          Properties:
            Path: /getAll
            Method: get
  createCar:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: fleet-management/built/createCar
      Policies:
        # Give DynamoDB Full Access to your Lambda Function, this should be changed!
        - AmazonDynamoDBFullAccess
      Handler: app.lambdaHandler
      Layers:
        - !Ref FleetManagementLayer
      Runtime: nodejs12.x
      Events:
        FleetManagementApi:
          Type: Api
          Properties:
            Path: /createCar
            Method: post
  deleteCar:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: fleet-management/built/deleteCar
      Policies:
        # Give DynamoDB Full Access to your Lambda Function, this should be changed!
        - AmazonDynamoDBFullAccess
      Handler: app.lambdaHandler
      Layers:
        - !Ref FleetManagementLayer
      Runtime: nodejs12.x
      Events:
        FleetManagementApi:
          Type: Api
          Properties:
            Path: /deleteCar
            Method: post # use delete
  FleetManagementLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
        LayerName: fleet-management-dependencies
        Description: Dependencies for fleet app
        ContentUri: dependencies/
        CompatibleRuntimes:
          - nodejs6.10
          - nodejs8.10
        LicenseInfo: 'MIT'
        RetentionPolicy: Retain
Outputs:
  FleetManagementApi:
    Description: "API Gateway endpoint URL for Prod stage for Fleet Management functions"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
